---
# SPDX-license-identifier: Apache-2.0
##############################################################################
# Copyright (c) 2025
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################
- name: Install uv
  hosts: all
  gather_facts: true
  tasks:
    - name: check to see if uv is already installed
      command: "uv --version"
      ignore_errors: true
      register: uv_is_installed
      changed_when: false
      environment:
        PATH: "{{ ansible_env.HOME}}/.local/bin"
    - block:
       - name: download install.sh
         get_url:
           url: https://astral.sh/uv/install.sh
           dest: /tmp
           mode: a+x
       - name: install uv
         script: /tmp/uv-installer.sh
       - name: delete install.sh
         file:
           state: absent
           path: /tmp/uv-install.sh
      when: uv_is_installed.rc != 0
- name: Install python
  hosts: all
  gather_facts: true
  vars:
    python_version: 3.12.9
  tasks:
    - name: Install python
      ansible.builtin.command: "{{ ansible_env.HOME}}/.local/bin/uv python install {{ python_version }} --default --preview --no-progress"
- name: Install exo
  hosts: all
  gather_facts: true
  vars:
    min_python_version: 3.12
  tasks:
    - name: Install dependencies
      become: true
      ansible.builtin.package:
        name: libgl1
    - name: Copy python requirements file
      ansible.builtin.copy:
        src: requeriments.txt
        dest: /tmp/requeriments.txt
    - name: Install exo binaries
      become: true
      ansible.builtin.command: "{{ ansible_env.HOME}}/.local/bin/uv pip sync /tmp/requeriments.txt --target /opt/exo --python-version {{ min_python_version }} --no-progress"
    - name: Create the systemd service file
      become: true
      ansible.builtin.copy:
        dest: /etc/systemd/system/exo.service
        content: |
          [Unit]
          Description=Exo Application
          After=network.target

          [Service]
          Type=simple
          User=root
          Environment="PYTHONPATH=/opt/exo/"
          ExecStart=/opt/exo/bin/exo --disable-tui
          Restart=always

          [Install]
          WantedBy=multi-user.target
        mode: '0644'
    - name: Reload systemd to pick up the new service
      become: true
      systemd:
        daemon_reload: yes
    - name: Enable and start the service
      become: true
      systemd:
        name: exo.service
        enabled: yes
        state: started
